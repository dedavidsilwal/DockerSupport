version: '3.4'

services:

#  haproxy:
#    image: tutum/haproxy


  reverseproxy:
    build:
      context: .
      dockerfile: Nginx/Dockerfile
    depends_on:
     - dockersupport   
    ports:
      - 80:80
     # - "443:443"
    restart: always

  dockersupport:
    image: dockersupport
    build:
      context: .
      dockerfile: DockerSupport/Dockerfile
    environment:
    - Grpc=http://grpcservice1
    - DefaultConnection=Server=db;User Id=root;Password=toor;Database=mariadbtest
    - webapi=http://webapi
    expose:
    - 80
    ports:
     - 5000:80
    restart: always
## ports:
##  - 8080:80
    depends_on:
    - grpcservice1
    - db
    - webapi

  healthchceks:
   image: healthchceks
   build: 
    context: .
    dockerfile: healthchceks/Dockerfile
  expose:
  - 5004
  restart:always


  grpcservice1:
    image: grpcservice1
    build:
      context: .
      dockerfile: GrpcService1/Dockerfile    

  db:
    image: mariadb
    ports:
      - 3306:3306
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: mariadbtest
      MYSQL_USER: root
      MYSQL_PASSWORD: toor


  webapi:
    image: webapi
    build:
      context: .
      dockerfile: WebAPI/Dockerfile
  
##  rabbitmq:
##    image:rabbitmq
##    container_name: rabbitmq

 ##  redis:
 ##    image:redis
 ##    container_name: redis
 ##
#  elasticsearch:
#     image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
#     container_name: elasticsearch
#     ports:
#      - 9200:9200
 ##    volumes:
   ##   - elasticsearch-data:/usr/share/elasticsearch/data

 # kibana:
 #   image: docker.elastic.co/kibana/kibana:7.5.1
 #   container_name: kibana
 #   ports:
 #   - 5601:5601
 #   depends_on:
 #   - elasticsearch



    


